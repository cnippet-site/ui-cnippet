generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

// model User {
//     id            String       @id @default(auto()) @map("_id") @db.ObjectId
//     name          String?
//     username      String?      @unique
//     email         String?      @unique
//     image         String?
//     password      String?
//     provider      String?
//     termsAccepted Boolean      @default(false)
//     emailVerified DateTime?
//     createdAt     DateTime     @default(now())
//     updatedAt     DateTime     @updatedAt
//     resetTokens   ResetToken[]
// }

model User {
    id                 String         @id @default(auto()) @map("_id") @db.ObjectId
    name               String?
    username           String?        @unique
    email              String?        @unique
    emailVerified      DateTime?
    image              String?
    password           String?
    provider           String?
    termsAccepted      Boolean        @default(false)
    preferredTheme     String?        @default("system")
    emailNotifications Boolean?       @default(true)
    inAppNotifications Boolean?       @default(false)
    preferredLanguage  String?        @default("en")
    preferredTimezone  String?        @default("UTC")
    ResetToken         ResetToken[]
}

model Newsletter {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    email     String   @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Contact {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    name      String
    email     String
    subject   String
    message   String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model ResetToken {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    token     String   @unique
    expires   DateTime
    userId    String   @db.ObjectId
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Otp {
    id        String   @id @default(cuid()) @map("_id")
    email     String   @unique
    code      String
    expiresAt DateTime
    attempts  Int      @default(0)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
